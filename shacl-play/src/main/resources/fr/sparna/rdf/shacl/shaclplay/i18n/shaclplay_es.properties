window.app=SHACL Play!

navbar.brand=SHACL Play!
navbar.validate=Validacion
navbar.shapes-catalog=Catalogo de Formas
navbar.rules-catalog=Catalogo de Reglas
navbar.convert=Convertir
navbar.draw=Diagrama
navbar.doc=Documento
navbar.rules=Reglas
navbar.sparql=Codigo SPARQL


home.validate.card-title=Validar datos RDF utilizando SHACL
home.validate.card-title.help=Obtenga un informe legible de una validación SHACL. \
Cargue su RDF o valide el archivo RDF en línea con alguna URL. También descargue un informe CSV o un informe SHACL Turtle sin procesar.
home.validate.button=Validar
home.draw.card-title=Dibujar un Diagrama UML de Formas (Shapes)
home.draw.card-title.help=¿Buscas algo más visual? ¡Genera diagramas UML en SVG desde tu archivo SHACL! Funciona con <a href="https://plantuml.com/">PlantUML</a> .
home.draw.button=Dibujar
home.doc.card-title=Generar Documento
home.doc.card-title.help=Genere documentación de estilo de perfil de aplicación, con tablas de propiedades permitidas para cada clase, a partir de su definición SHACL. ¡Listo para ser enviado a los desarrolladores!
home.doc.button=Generar Documento
home.catalog.card-title=Obtenga una insignia valida para su archivo
home.catalog.card-title.help=Si su archivo Shape está registrado en el <a href="<c:url value="/shapes-catalog" /> Catalogo de formas (Shapes)</a> y valida un archivo en línea, obtiene Markdown o código URL para mostrar una insignia de validación en su proyecto de Github. Ver <a href="https://github.com/sparna-git/SHACL-Catalog">an exemple here</a>.
home.catalog.button=Iniciar la validacion
home.catalog-rules.card-title=Registrar reglas SHACL en catálogo SHACL
home.catalog-rules.card-title.help=Usted cuenta con un archivo OWL y le gustaria , utilise las reglas de conversion OWL hacia SHACL para generar su archivo de restriccion SHACL.
home.catalog-rules.button=Examinar el catálogo SHAPE
home.from-owl.title=Convertir OWL a SHACL
home.from-owl.title.help=Entonces, ¿tiene un archivo OWL y le gustaría derivar SHACL de él? use las reglas de conversión de OWL a SHACL para generar su archivo de restricciones SHACL.
home.from-owl.button=Convertir OWL a SHACL
home.convert.card-title=Applicar reglas SHACL genericas
home.convert.card-title.help=¿Quiere más que reglas OWL-2-SHACL? aplique <a href="https://www.w3.org/TR/shacl-af/#rules">Reglas SHACL</a> personalizadas a sus datos para obtener nuevos datos.</p>
home.convert.button-rdf=Convertir RDF usando Reglas
home.convert.button-shaclrules=Mostrar las reglas SHACL
home.sparql.card-title=Generar codigo SPARQL
home.sparql.card-title.help=Genera codigo SPARQL a partir de un archivo SHACL!
home.sparql.button=Generar

validate.title=Validacion RDF
validate.title.validateWith=Validar con
validate.inputData.title=RDF a validar
validate.inputData.upload=Cargar
validate.inputData.upload.select=Seleccionar un archivo
validate.inputData.upload.change=Modificar
validate.inputData.upload.remove=Anular
validate.inputData.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extensiones soportadas : .rdf, .ttl, .n3, .trig. Las otras extensiones seran consideradas como RDF/XML. Tambien usted puede enviar archivos <em>zip</em>.
validate.inputData.url=URL
validate.inputData.url.placeholder=http://... (URL de un archivo RDF)
validate.inputData.url.help=URL de un archivo RDF valido - Soporta las mismas extensiones que la opcion "Cargar" . <br />\
Por ejemplo, puede intentar validar <a href="#" onclick="$('#inputUrl').val('https://raw.githubusercontent.com/sparna-git/SHACL-Catalog/master/shacl-catalog.ttl');enabledInput('inputUrl');" title="https://raw.githubusercontent.com/sparna-git/SHACL-Catalog/master/shacl-catalog.ttl"> los datos de el catalogo de Formas</a>\
, con la forma "SHACL Play! Catalogo Shapes" en la lista de abajo.
validate.inputData.inline=Copiar/pegar el codigo RDF
validate.inputData.inline.help=Sintaxis soportadas : Turtle, RDF/XML, JSON-LD, TriG, TriX, N-Quads. Se recomienda Turtle.

validate.shapes.title=Forma (Shape)
validate.shapes.upload=Cargar
validate.shapes.upload.select=Seleccionar un archivo
validate.shapes.upload.change=Modificar
validate.shapes.upload.remove=Anular
validate.shapes.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extensiones soportadas : .rdf, .ttl, .n3, .trig. Las otras extensiones seran consideradas como RDF/XML
validate.shapes.catalog=Seleccionar en el <a href="shapes-catalog">catalogo</a>
validate.shapes.catalog.help=Para que su archivo SHACL se publique en la lista, Edite directamente el <a target="_blank" href="https://github.com/sparna-git/SHACL-Catalog/blob/master/shacl-catalog.ttl">catalogo en Github</a>.
validate.shapes.url=URL
validate.shapes.url.placeholder=http://... (URL de un archivo SHACL)
validate.shapes.url.help=URL de un archivo RDF valido - Soporta las mismas extensiones que la opcion "Cargar".
validate.shapes.inline=Copiar/pegar las reglas SHACL
validate.shapes.inline.help=Sintaxis soportadas : Turtle, RDF/XML, JSON-LD, TriG, TriX, N-Quads. Se recomienda Turtle.

validate.options.title=Opciones
validate.options.infer=Activar l'inférencia OWL-Micro antes de validar 
validate.options.infer.help=Si los datos a validar contienen la Ontologia, usted puede activar una <a href="https://jena.apache.org/documentation/inference/#owl">inferencia OWL-Micro</a> sobre los datos antes de ejecutar la validacion. /!\ La inferencia puede consumir tiempo
validate.options.closeShapes=Modo cerrado (adjunta sh:closed sobre el NodeShape)
validate.options.closeShapes.help=Esta opcion verifica que cada Forma (Shape) proyecte <em>solamente</em> las propiedades declaradas explicitamente en el archivo de forma (Shape). \
 En otros terminos, esto verifica que las propiedades esten "configuradas correctamente" sobre el dominio, y que ninguna otra propiedad que esten explicitamente enlistados no esten presente en los datos. La validacion opera en "modo cerrado". \  
 Tecnicamente, esta operacion agrega <code>sh:closed true; sh:ignoreProperties (rdf:type);</code> sobre todos los NodeShapes que no esten cerrados.
validate.options.createDetails=Incluir los detalles
validate.options.createDetails.help=Activar esta opcion para incluir en el reporte de validacion las causas de excepciones generadas por las clausulas: sh:or, sh:and, sh:node o sh:qualifiedValueShape

validate.validate=Validar




catalog.title=Catalogo de formas (Shapes)
catalog.entry.addedOn=Agregue el 
catalog.entry.addedOn.by=por


catalog-rules.title=Catalogo de Reglas
catalog-rules.entry.addedOn=Agregue el
catalog-rules.entry.addedOn.by=por


convert.title=Transformacion RDF
convert.title.convertWith=Transformar con
convert.inputData.title=RDF a transformar
convert.inputData.upload=Cargar
convert.inputData.upload.select=Seleccionar un archivo
convert.inputData.upload.change=Modificar
convert.inputData.upload.remove=Anular
convert.inputData.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extensiones soportadas : .rdf, .ttl, .n3, .trig. Las otras extensiones seran consideradas como RDF/XML. Tambien usted puede enviar archivos <em>zip</em>.
convert.inputData.url=URL
convert.inputData.url.placeholder=http://... (URL de un archivo RDF)
convert.inputData.url.help=URL de un archivo RDF valido - Soporta las mismas extensiones que la opcion "Cargar".
convert.inputData.inline=Copiar/pegar el codigo RDF
convert.inputData.inline.help=Sintaxis soportadas : Turtle, RDF/XML, JSON-LD, TriG, TriX, N-Quads. Se recomienda Turtle.

convert.shapes.title=Reglas
convert.shapes.upload=Cargar
convert.shapes.upload.select=Seleccionar un archivo
convert.shapes.upload.change=Modificar
convert.shapes.upload.remove=Anular
convert.shapes.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extensiones soportadas : .rdf, .ttl, .n3, .trig. Las otras extensiones seran consideradas como RDF/XML
convert.shapes.catalog=Selectionar en el <a href="rules-catalog">catalogo de reglas</a>
convert.shapes.catalog.help=Para que su archivo SHACL se publique en la lista, Edite directamente el <a target="_blank" href="https://github.com/sparna-git/SHACL-Catalog/blob/master/rules-catalog.ttl">catalogo en Github</a>.
convert.shapes.url=URL
convert.shapes.url.placeholder=http://... (URL de un archivo SHACL)
convert.shapes.url.help=URL de un archivo RDF valido - Soporta las mismas extensiones que la opcion "Cargar".
convert.shapes.inline=Copiar/pegar las reglas SHACL
convert.shapes.inline.help=Sintaxis soportadas : Turtle, RDF/XML, JSON-LD, TriG, TriX, N-Quads. Se recomienda Turtle.

convert.options.title=Opciones

convert.submit=Convertir


draw.title=Dibujar mi SHACL en UML
draw.shapes.title=Reglas
draw.shapes.upload=Cargar
draw.shapes.upload.select=Seleccionar un archivo
draw.shapes.upload.change=Modificar
draw.shapes.upload.remove=Anular
draw.shapes.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extensiones soportadas : .rdf, .ttl, .n3, .trig. Las otras extensiones seran consideradas como RDF/XML.
draw.shapes.catalog=Selectionar en el <a href="shapes-catalog">catalogo de formas (shapes)</a>
draw.shapes.catalog.help=Para que su archivo SHACL se publique en la lista, Edite directamente el <a target="_blank" href="https://github.com/sparna-git/SHACL-Catalog/blob/master/shapes-catalog.ttl">catalogo en Github</a>.
draw.shapes.url=URL
draw.shapes.url.placeholder=http://... (URL de un archivo SHACL)
draw.shapes.url.help=URL de un archivo RDF valido - Soporta las mismas extensiones que la opcion "Cargar".
draw.shapes.inline=Copiar/pegar les règles SHACL
draw.shapes.inline.help=Sintaxis soportadas : Turtle, RDF/XML, JSON-LD, TriG, TriX, N-Quads. Se recomienda Turtle.

draw.options.title=Opciones
draw.options.format=Formato de Salida

draw.submit=Dibujar


doc.title=Generar un documento SHACL
doc.shapes.title=Reglas
doc.shapes.upload=Cargar
doc.shapes.upload.select=Seleccionar un archivo
doc.shapes.upload.change=Modificar
doc.shapes.upload.remove=Anular
doc.shapes.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extensiones soportadas : .rdf, .ttl, .n3, .trig. Las otras extensiones seran consideradas como RDF/XML.
doc.shapes.catalog=Selectionar en el <a href="shapes-catalog">catalogo de shapes</a>
doc.shapes.catalog.help=Para que su archivo SHACL se publique en la lista, Edite directamente el <a target="_blank" href="https://github.com/sparna-git/SHACL-Catalog/blob/master/shapes-catalog.ttl">catalogo en Github</a>.
doc.shapes.url=URL
doc.shapes.url.placeholder=http://... (URL de un archivo SHACL)
doc.shapes.url.help=URL de un archivo RDF valido - Soporta las mismas extensiones que la opcion "Cargar".
doc.shapes.inline=Copiar/pegar las reglas SHACL
doc.shapes.inline.help=Sintaxis soportadas : Turtle, RDF/XML, JSON-LD, TriG, TriX, N-Quads. Se recomienda Turtle.

doc.options.title=Opciones

doc.options.includeDiagram=Incluir el diagram.
doc.options.includeDiagram.help=Seleccione la opcion si usted quiere incluir el diagrama UML en la generacion del documento. La produccion de un diagrama puede estar limitado.

doc.options.logo=Agregar Logotipo
doc.options.logo.placeholder=http://... (URL del archivo)
doc.options.logo.help=Incruste el logotipo de su empresa u organizacion. El formato SVG no es soportado para la generacion del PDF. 

doc.options.printPDF= Imprimir en Formato PDF
doc.options.printPDF.help=Seleccione si desa imprimir en formato PDF. (No se considera el diagrama UML)

doc.submit=Generar



rules.title=Publicar las Reglas
rules.shapes.title=Reglas
rules.shapes.upload=Cargar
rules.shapes.upload.select=Seleccionar un Archivo
rules.shapes.upload.change=Modificar
rules.shapes.upload.remove=Anular
rules.shapes.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extensiones soportadas : .rdf, .ttl, .n3, .trig. Las otras extensiones seran consideradas como RDF/XML.
rules.shapes.catalog=Selectionar en el <a href="rules-catalog">catalogo de reglas</a>
rules.shapes.catalog.help=Para que sus Reglas se publiquen en la liste, Edite directamente el <a target="_blank" href="https://github.com/sparna-git/SHACL-Catalog/blob/master/rules-catalog.ttl">catalogo en Github</a>.
rules.shapes.url=URL
rules.shapes.url.placeholder=http://... (URL de un archivo de Reglas)
rules.shapes.url.help=URL de un archivo RDF valido - Soporta las mismas extensiones que la opcion "Cargar".
rules.shapes.inline=Copiar/pegar las Reglas SHACL
rules.shapes.inline.help=Sintaxis soportadas : Turtle, RDF/XML, JSON-LD, TriG, TriX, N-Quads. Se recomienda Turtle.

rules.options.title=Opciones

rules.submit=Publicar



sparql.title=Convertir mi SHACL en Sparql Query 
sparql.inputData.title=Forma (Shape)
sparql.inputData.upload=Cargar
sparql.inputData.upload.select=Seleccionar un Archivo
sparql.inputData.upload.change=Modificar
sparql.inputData.upload.remove=Anular
sparql.inputData.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extension soportada : .ttl .
sparql.inputData.url=URL
sparql.inputData.url.placeholder=http://... (URL de un archivo Turtle)
sparql.inputData.url.help=URL de un archivo TURTLE valido - Soporta las mismas extensiones que  la opcion "Cargar".
sparql.inputData.inline=Copiar/pegar el codigo de un archivo TURTLE.
sparql.inputData.inline.help=Sintaxis soportada : Turtle.

sparql.shapes.title=Shape Opcional
sparql.shapes.upload=Cargar
sparql.shapes.upload.select=Seleccionar un Archivo
sparql.shapes.upload.change=Modificar
sparql.shapes.upload.remove=Anular
sparql.shapes.upload.help=Usted puede seleccionar varios archivos al mismo tiempo. Extension soportada : .ttl .
sparql.shapes.url=URL
sparql.shapes.url.placeholder=http://... (URL de un archivo Turtle)
sparql.shapes.url.help=URL de un archivo TURTLE valido - Soporta las mismas extensiones que  la opcion "Cargar".
sparql.shapes.inline=Copiar/pegar el codigo de un archivo TURTLE.
sparql.shapes.inline.help=Sintaxis soportada : Turtle.

sparql.options.title=Opciones
sparql.options.formatStandard=Formato de Consulta Estandar (SPARQL Query)
sparql.options.formatStandard.help=Generar un archivo por cada Consulta.
sparql.options.formatCombine=Formato de consulta combinada .
sparql.options.formatCombine.help=Generar una consulta (Query) integrando la clausula UNION, si la casilla esta desactivada, el proceso crear un archivo por cada consulta. 

sparql.validate=Descargar
